{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousPriceMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestedPriceMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPriceMantissa",
          "type": "uint256"
        }
      ],
      "name": "PricePosted",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "assetPrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "getUnderlyingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isPriceOracle",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setDirectPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "underlyingPriceMantissa",
          "type": "uint256"
        }
      ],
      "name": "setUnderlyingPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/CErc20.sol",
    "10": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/EIP20NonStandardInterface.sol",
    "11": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/ErrorReporter.sol",
    "12": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/Exponential.sol",
    "14": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/InterestRateModel.sol",
    "16": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/PriceOracle.sol",
    "18": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/SimplePriceOracle.sol",
    "21": "contracts/mocks/CompoundImports.sol",
    "3": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/CToken.sol",
    "4": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/CTokenInterfaces.sol",
    "5": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/CarefulMath.sol",
    "7": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/ComptrollerInterface.sol",
    "9": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/EIP20Interface.sol"
  },
  "ast": {
    "absolutePath": "contracts/mocks/CompoundImports.sol",
    "exportedSymbols": {
      "nCErc20": [
        52
      ],
      "nCEther": [
        82
      ],
      "nComptroller": [
        16
      ],
      "nJumpRateModel": [
        103
      ],
      "nPriceOracle": [
        19
      ],
      "nWhitePaperInterestRateModel": [
        118
      ]
    },
    "id": 119,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:21"
      },
      {
        "absolutePath": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/Comptroller.sol",
        "file": "compound-finance/compound-protocol@2.8.1/contracts/Comptroller.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 119,
        "sourceUnit": 4289,
        "src": "26:76:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/CErc20Immutable.sol",
        "file": "compound-finance/compound-protocol@2.8.1/contracts/CErc20Immutable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 119,
        "sourceUnit": 164,
        "src": "103:80:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/CEther.sol",
        "file": "compound-finance/compound-protocol@2.8.1/contracts/CEther.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 119,
        "sourceUnit": 540,
        "src": "184:71:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/WhitePaperInterestRateModel.sol",
        "file": "compound-finance/compound-protocol@2.8.1/contracts/WhitePaperInterestRateModel.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 119,
        "sourceUnit": 4834,
        "src": "256:92:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/JumpRateModel.sol",
        "file": "compound-finance/compound-protocol@2.8.1/contracts/JumpRateModel.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 119,
        "sourceUnit": 4518,
        "src": "349:78:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jwu/.brownie/packages/compound-finance/compound-protocol@2.8.1/contracts/SimplePriceOracle.sol",
        "file": "compound-finance/compound-protocol@2.8.1/contracts/SimplePriceOracle.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 119,
        "sourceUnit": 4667,
        "src": "428:82:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Comptroller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4288,
              "src": "537:11:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Comptroller_$4288",
                "typeString": "contract Comptroller"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "537:11:21"
          }
        ],
        "contractDependencies": [
          4288,
          8830,
          8843,
          8859,
          8895,
          8936,
          9037,
          10360,
          12657
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 16,
        "linearizedBaseContracts": [
          16,
          4288,
          10360,
          12657,
          9037,
          8830,
          8936,
          8895,
          8859,
          8843
        ],
        "name": "nComptroller",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14,
              "nodeType": "Block",
              "src": "590:2:21",
              "statements": []
            },
            "documentation": null,
            "id": 15,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 12,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11,
                  "name": "Comptroller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4288,
                  "src": "576:11:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Comptroller_$4288_$",
                    "typeString": "type(contract Comptroller)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "576:13:21"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:2:21"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "590:0:21"
            },
            "scope": 16,
            "src": "555:37:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 119,
        "src": "512:82:21"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 17,
              "name": "SimplePriceOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4666,
              "src": "621:17:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimplePriceOracle_$4666",
                "typeString": "contract SimplePriceOracle"
              }
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "621:17:21"
          }
        ],
        "contractDependencies": [
          4666,
          11332
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 19,
        "linearizedBaseContracts": [
          19,
          4666,
          11332
        ],
        "name": "nPriceOracle",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 119,
        "src": "596:46:21"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20,
              "name": "CErc20Immutable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 163,
              "src": "664:15:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CErc20Immutable_$163",
                "typeString": "contract CErc20Immutable"
              }
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "664:15:21"
          }
        ],
        "contractDependencies": [
          163,
          5118,
          8623,
          9196,
          10360,
          11922,
          12223,
          12226,
          12291,
          12657
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 52,
        "linearizedBaseContracts": [
          52,
          163,
          5118,
          12291,
          12226,
          8623,
          9196,
          10360,
          12657,
          12223,
          11922
        ],
        "name": "nCErc20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "1140:3:21",
              "statements": []
            },
            "documentation": null,
            "id": 51,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 40,
                    "name": "underlying_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23,
                    "src": "1028:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 41,
                    "name": "comptroller_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "1041:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$8830",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 42,
                    "name": "interestRateModel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "1055:18:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$11612",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 43,
                    "name": "initialExchangeRateMantissa_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29,
                    "src": "1075:28:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 44,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 31,
                    "src": "1105:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 45,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33,
                    "src": "1112:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 46,
                    "name": "decimals_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "1121:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 47,
                    "name": "admin_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "1132:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 48,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 39,
                  "name": "CErc20Immutable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 163,
                  "src": "1012:15:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CErc20Immutable_$163_$",
                    "typeString": "type(contract CErc20Immutable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1012:127:21"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "name": "underlying_",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "699:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "name": "comptroller_",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "732:33:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ComptrollerInterface_$8830",
                    "typeString": "contract ComptrollerInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 24,
                    "name": "ComptrollerInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8830,
                    "src": "732:20:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$8830",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "name": "interestRateModel_",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "779:36:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InterestRateModel_$11612",
                    "typeString": "contract InterestRateModel"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 26,
                    "name": "InterestRateModel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11612,
                    "src": "779:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$11612",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "initialExchangeRateMantissa_",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "829:33:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "876:19:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "909:21:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "944:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "name": "admin_",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "973:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:15:21",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "698:298:21"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1140:0:21"
            },
            "scope": 52,
            "src": "687:456:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 119,
        "src": "644:501:21"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 53,
              "name": "CEther",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 539,
              "src": "1167:6:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CEther_$539",
                "typeString": "contract CEther"
              }
            },
            "id": 54,
            "nodeType": "InheritanceSpecifier",
            "src": "1167:6:21"
          }
        ],
        "contractDependencies": [
          539,
          8623,
          9196,
          10360,
          11922,
          12223,
          12657
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 82,
        "linearizedBaseContracts": [
          82,
          539,
          8623,
          9196,
          10360,
          12657,
          12223,
          11922
        ],
        "name": "nCEther",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "1603:3:21",
              "statements": []
            },
            "documentation": null,
            "id": 81,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 71,
                    "name": "comptroller_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "1504:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$8830",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 72,
                    "name": "interestRateModel_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58,
                    "src": "1518:18:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$11612",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 73,
                    "name": "initialExchangeRateMantissa_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60,
                    "src": "1538:28:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 74,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62,
                    "src": "1568:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 75,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 64,
                    "src": "1575:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 76,
                    "name": "decimals_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1584:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 77,
                    "name": "admin_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 68,
                    "src": "1595:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 78,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 70,
                  "name": "CEther",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 539,
                  "src": "1497:6:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CEther_$539_$",
                    "typeString": "type(contract CEther)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1497:105:21"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "name": "comptroller_",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1193:33:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ComptrollerInterface_$8830",
                    "typeString": "contract ComptrollerInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 55,
                    "name": "ComptrollerInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8830,
                    "src": "1193:20:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$8830",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "name": "interestRateModel_",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1244:36:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InterestRateModel_$11612",
                    "typeString": "contract InterestRateModel"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 57,
                    "name": "InterestRateModel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11612,
                    "src": "1244:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$11612",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "initialExchangeRateMantissa_",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1298:33:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1349:19:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1386:21:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1425:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "name": "admin_",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1458:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:15:21",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1192:289:21"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1603:0:21"
            },
            "scope": 82,
            "src": "1181:425:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 119,
        "src": "1147:461:21"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 83,
              "name": "JumpRateModel",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4517,
              "src": "1637:13:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_JumpRateModel_$4517",
                "typeString": "contract JumpRateModel"
              }
            },
            "id": 84,
            "nodeType": "InheritanceSpecifier",
            "src": "1637:13:21"
          }
        ],
        "contractDependencies": [
          4517,
          11612
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 103,
        "linearizedBaseContracts": [
          103,
          4517,
          11612
        ],
        "name": "nJumpRateModel",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1851:3:21",
              "statements": []
            },
            "documentation": null,
            "id": 102,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 95,
                    "name": "baseRatePerYear",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86,
                    "src": "1785:15:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 96,
                    "name": "multiplierPerYear",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88,
                    "src": "1802:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 97,
                    "name": "jumpMultiplierPerYear",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 90,
                    "src": "1821:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 98,
                    "name": "kink_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 92,
                    "src": "1844:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 99,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 94,
                  "name": "JumpRateModel",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4517,
                  "src": "1771:13:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_JumpRateModel_$4517_$",
                    "typeString": "type(contract JumpRateModel)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1771:79:21"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "name": "baseRatePerYear",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1669:20:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "name": "multiplierPerYear",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1691:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "name": "jumpMultiplierPerYear",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1715:26:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "name": "kink_",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1743:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1668:86:21"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1851:0:21"
            },
            "scope": 103,
            "src": "1657:197:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 119,
        "src": "1610:246:21"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 104,
              "name": "WhitePaperInterestRateModel",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4833,
              "src": "1899:27:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitePaperInterestRateModel_$4833",
                "typeString": "contract WhitePaperInterestRateModel"
              }
            },
            "id": 105,
            "nodeType": "InheritanceSpecifier",
            "src": "1899:27:21"
          }
        ],
        "contractDependencies": [
          4833,
          11612
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 118,
        "linearizedBaseContracts": [
          118,
          4833,
          11612
        ],
        "name": "nWhitePaperInterestRateModel",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "2070:2:21",
              "statements": []
            },
            "documentation": null,
            "id": 117,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 112,
                    "name": "baseRatePerYear",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 107,
                    "src": "2034:15:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 113,
                    "name": "multiplierPerYear",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 109,
                    "src": "2051:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 114,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 111,
                  "name": "WhitePaperInterestRateModel",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4833,
                  "src": "2006:27:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_WhitePaperInterestRateModel_$4833_$",
                    "typeString": "type(contract WhitePaperInterestRateModel)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2006:63:21"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "baseRatePerYear",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1945:20:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "name": "multiplierPerYear",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1967:22:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1944:46:21"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:0:21"
            },
            "scope": 118,
            "src": "1933:139:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 119,
        "src": "1858:216:21"
      }
    ],
    "src": "0:2074:21"
  },
  "bytecode": "608060405234801561001057600080fd5b506105ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806309a8acb01461005c578063127ffda01461008a5780635e9a523c146100b657806366331bba146100ee578063fc57d4df1461010a575b600080fd5b6100886004803603604081101561007257600080fd5b506001600160a01b038135169060200135610130565b005b610088600480360360408110156100a057600080fd5b506001600160a01b0381351690602001356101a8565b6100dc600480360360208110156100cc57600080fd5b50356001600160a01b031661028a565b60408051918252519081900360200190f35b6100f66102a9565b604080519115158252519081900360200190f35b6100dc6004803603602081101561012057600080fd5b50356001600160a01b03166102ae565b6001600160a01b038216600081815260208181526040918290205482519384529083015281810183905260608201839052517fdd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae79181900360800190a16001600160a01b03909116600090815260208190526040902055565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e357600080fd5b505afa1580156101f7573d6000803e3d6000fd5b505050506040513d602081101561020d57600080fd5b50516001600160a01b038116600081815260208181526040918290205482519384529083015281810185905260608201859052519192507fdd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae7919081900360800190a16001600160a01b031660009081526020819052604090205550565b6001600160a01b0381166000908152602081905260409020545b919050565b600181565b60006103f5826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156102ec57600080fd5b505afa158015610300573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561032957600080fd5b810190808051604051939291908464010000000082111561034957600080fd5b90830190602082018581111561035e57600080fd5b825164010000000081118282018810171561037857600080fd5b82525081516020918201929091019080838360005b838110156103a557818101518382015260200161038d565b50505050905090810190601f1680156103d25780820380516001836020036101000a031916815260200191505b506040818101905260048152630c68aa8960e31b60208201529250610492915050565b156104095750670de0b6b3a76400006102a4565b600080836001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561044557600080fd5b505afa158015610459573d6000803e3d6000fd5b505050506040513d602081101561046f57600080fd5b50516001600160a01b0316815260208101919091526040016000205490506102a4565b6000816040516020018082805190602001908083835b602083106104c75780518252601f1990920191602091820191016104a8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120836040516020018082805190602001908083835b602083106105355780518252601f199092019160209182019101610516565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201490509291505056fea265627a7a72315820452f26496cb8a6882ca8c3df10cf0f3e5695653a5be6360458adac35056bf9f464736f6c63430005110032",
  "bytecodeSha1": "c7b9fb01658f9bed6b4661c6c9da3b1ef33ad259",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "nPriceOracle",
  "coverageMap": {
    "branches": {
      "0": {},
      "10": {},
      "11": {},
      "12": {},
      "14": {},
      "16": {},
      "18": {
        "SimplePriceOracle.getUnderlyingPrice": {
          "8": [
            366,
            405,
            false
          ]
        }
      },
      "21": {},
      "3": {},
      "4": {},
      "5": {},
      "7": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "10": {},
      "11": {},
      "12": {},
      "14": {},
      "16": {},
      "18": {
        "SimplePriceOracle.assetPrices": {
          "4": [
            1157,
            1177
          ]
        },
        "SimplePriceOracle.compareStrings": {
          "7": [
            1287,
            1364
          ]
        },
        "SimplePriceOracle.getUnderlyingPrice": {
          "5": [
            421,
            432
          ],
          "6": [
            463,
            523
          ]
        },
        "SimplePriceOracle.setDirectPrice": {
          "0": [
            925,
            977
          ],
          "1": [
            987,
            1008
          ]
        },
        "SimplePriceOracle.setUnderlyingPrice": {
          "2": [
            707,
            795
          ],
          "3": [
            805,
            844
          ]
        }
      },
      "21": {},
      "3": {},
      "4": {},
      "5": {},
      "7": {},
      "9": {}
    }
  },
  "dependencies": [
    "compound-finance/compound-protocol@2.8.1/CErc20",
    "compound-finance/compound-protocol@2.8.1/CErc20Interface",
    "compound-finance/compound-protocol@2.8.1/CErc20Storage",
    "compound-finance/compound-protocol@2.8.1/CToken",
    "compound-finance/compound-protocol@2.8.1/CTokenInterface",
    "compound-finance/compound-protocol@2.8.1/CTokenStorage",
    "compound-finance/compound-protocol@2.8.1/CarefulMath",
    "compound-finance/compound-protocol@2.8.1/ComptrollerInterface",
    "compound-finance/compound-protocol@2.8.1/EIP20Interface",
    "compound-finance/compound-protocol@2.8.1/EIP20NonStandardInterface",
    "compound-finance/compound-protocol@2.8.1/Exponential",
    "compound-finance/compound-protocol@2.8.1/InterestRateModel",
    "compound-finance/compound-protocol@2.8.1/PriceOracle",
    "compound-finance/compound-protocol@2.8.1/SimplePriceOracle",
    "compound-finance/compound-protocol@2.8.1/TokenErrorReporter"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c806309a8acb01461005c578063127ffda01461008a5780635e9a523c146100b657806366331bba146100ee578063fc57d4df1461010a575b600080fd5b6100886004803603604081101561007257600080fd5b506001600160a01b038135169060200135610130565b005b610088600480360360408110156100a057600080fd5b506001600160a01b0381351690602001356101a8565b6100dc600480360360208110156100cc57600080fd5b50356001600160a01b031661028a565b60408051918252519081900360200190f35b6100f66102a9565b604080519115158252519081900360200190f35b6100dc6004803603602081101561012057600080fd5b50356001600160a01b03166102ae565b6001600160a01b038216600081815260208181526040918290205482519384529083015281810183905260608201839052517fdd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae79181900360800190a16001600160a01b03909116600090815260208190526040902055565b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e357600080fd5b505afa1580156101f7573d6000803e3d6000fd5b505050506040513d602081101561020d57600080fd5b50516001600160a01b038116600081815260208181526040918290205482519384529083015281810185905260608201859052519192507fdd71a1d19fcba687442a1d5c58578f1e409af71a79d10fd95a4d66efd8fa9ae7919081900360800190a16001600160a01b031660009081526020819052604090205550565b6001600160a01b0381166000908152602081905260409020545b919050565b600181565b60006103f5826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156102ec57600080fd5b505afa158015610300573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561032957600080fd5b810190808051604051939291908464010000000082111561034957600080fd5b90830190602082018581111561035e57600080fd5b825164010000000081118282018810171561037857600080fd5b82525081516020918201929091019080838360005b838110156103a557818101518382015260200161038d565b50505050905090810190601f1680156103d25780820380516001836020036101000a031916815260200191505b506040818101905260048152630c68aa8960e31b60208201529250610492915050565b156104095750670de0b6b3a76400006102a4565b600080836001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561044557600080fd5b505afa158015610459573d6000803e3d6000fd5b505050506040513d602081101561046f57600080fd5b50516001600160a01b0316815260208101919091526040016000205490506102a4565b6000816040516020018082805190602001908083835b602083106104c75780518252601f1990920191602091820191016104a8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120836040516020018082805190602001908083835b602083106105355780518252601f199092019160209182019101610516565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201490509291505056fea265627a7a72315820452f26496cb8a6882ca8c3df10cf0f3e5695653a5be6360458adac35056bf9f464736f6c63430005110032",
  "deployedSourceMap": "596:46:21:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;596:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;857:158:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;857:158:18;;;;;;;;:::i;:::-;;546:305;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;546:305:18;;;;;;;;:::i;1082:102::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1082:102:18;-1:-1:-1;;;;;1082:102:18;;:::i;:::-;;;;;;;;;;;;;;;;156:41:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;282:258:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;282:258:18;-1:-1:-1;;;;;282:258:18;;:::i;857:158::-;-1:-1:-1;;;;;949:13:18;;:6;:13;;;;;;;;;;;;;930:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;987:13:18;;;:6;:13;;;;;;;;;;:21;857:158::o;546:305::-;636:13;675:6;-1:-1:-1;;;;;660:34:18;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:36:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;660:36:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;660:36:18;-1:-1:-1;;;;;731:13:18;;:6;:13;;;660:36;731:13;;;;;;;;;712:83;;;;;;;;;;;;;;;;;;;;;;660:36;;-1:-1:-1;712:83:18;;;;;;;;;;-1:-1:-1;;;;;805:13:18;:6;:13;;;;;;;;;;:39;-1:-1:-1;546:305:18:o;1082:102::-;-1:-1:-1;;;;;1164:13:18;;1141:4;1164:13;;;;;;;;;;;1082:102;;;;:::o;156:41:16:-;193:4;156:41;:::o;282:258:18:-;346:4;366:39;381:6;-1:-1:-1;;;;;381:13:18;;:15;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;381:15:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;381:15:18;;;;;;39:16:-1;36:1;17:17;2:54;101:4;381:15:18;80::-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;381:15:18;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;381:15:18;;420:4:-1;411:14;;;;381:15:18;;;;;411:14:-1;381:15:18;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;381:15:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;381:15:18;366:39;;;;;;;;-1:-1:-1;;;366:39:18;;;;381:15;-1:-1:-1;366:14:18;;-1:-1:-1;;366:39:18:i;:::-;362:172;;;-1:-1:-1;428:4:18;421:11;;362:172;470:6;:53;500:6;-1:-1:-1;;;;;485:34:18;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;485:36:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;485:36:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;485:36:18;-1:-1:-1;;;;;470:53:18;;;485:36;470:53;;;;;;;;-1:-1:-1;470:53:18;;;-1:-1:-1;463:60:18;;1190:181;1271:4;1359:1;1341:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1341:21:18;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1341:21:18;;;1331:32;;;;;;1323:1;1305:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1305:21:18;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1305:21:18;;;1295:32;;;;;;:68;1287:77;;1190:181;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    596,
    642
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A8ACB0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x127FFDA0 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x5E9A523C EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x66331BBA EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xFC57D4DF EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x130 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP4 SWAP1 MSTORE MLOAD PUSH32 0xDD71A1D19FCBA687442A1D5C58578F1E409AF71A79D10FD95A4D66EFD8FA9AE7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6F307DC3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE DUP2 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE MLOAD SWAP2 SWAP3 POP PUSH32 0xDD71A1D19FCBA687442A1D5C58578F1E409AF71A79D10FD95A4D66EFD8FA9AE7 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F5 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x300 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x38D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3D2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP2 DUP2 ADD SWAP1 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0xC68AA89 PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP3 POP PUSH2 0x492 SWAP2 POP POP JUMP JUMPDEST ISZERO PUSH2 0x409 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6F307DC3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x459 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x4C7 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x535 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x516 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 GASLIMIT 0x2F 0x26 0x49 PUSH13 0xB8A6882CA8C3DF10CF0F3E5695 PUSH6 0x3A5BE6360458 0xAD 0xAC CALLDATALOAD SDIV PUSH12 0xF9F464736F6C634300051100 ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        596,
        642
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "REVERT",
      "path": "21"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        596,
        642
      ],
      "op": "POP",
      "path": "21"
    },
    "18": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "21": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "LT",
      "path": "21"
    },
    "22": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "26": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "CALLDATALOAD",
      "path": "21"
    },
    "29": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "SHR",
      "path": "21"
    },
    "32": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "DUP1",
      "path": "21"
    },
    "33": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x9A8ACB0"
    },
    "38": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "EQ",
      "path": "21"
    },
    "39": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "43": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "DUP1",
      "path": "21"
    },
    "44": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x127FFDA0"
    },
    "49": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "EQ",
      "path": "21"
    },
    "50": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8A"
    },
    "53": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "54": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "DUP1",
      "path": "21"
    },
    "55": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x5E9A523C"
    },
    "60": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "EQ",
      "path": "21"
    },
    "61": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xB6"
    },
    "64": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "65": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "DUP1",
      "path": "21"
    },
    "66": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x66331BBA"
    },
    "71": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "EQ",
      "path": "21"
    },
    "72": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xEE"
    },
    "75": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "76": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "DUP1",
      "path": "21"
    },
    "77": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xFC57D4DF"
    },
    "82": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "EQ",
      "path": "21"
    },
    "83": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10A"
    },
    "86": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "87": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "88": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "DUP1",
      "path": "21"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        596,
        642
      ],
      "op": "REVERT",
      "path": "21"
    },
    "92": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "93": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x88"
    },
    "96": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "98": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "DUP1",
      "path": "18"
    },
    "99": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "100": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "SUB",
      "path": "18"
    },
    "101": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "103": {
      "op": "DUP2"
    },
    "104": {
      "op": "LT"
    },
    "105": {
      "op": "ISZERO"
    },
    "106": {
      "op": "PUSH2",
      "value": "0x72"
    },
    "109": {
      "op": "JUMPI"
    },
    "110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "112": {
      "op": "DUP1"
    },
    "113": {
      "op": "REVERT"
    },
    "114": {
      "op": "JUMPDEST"
    },
    "115": {
      "op": "POP"
    },
    "116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "122": {
      "op": "SHL"
    },
    "123": {
      "op": "SUB"
    },
    "124": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "DUP2",
      "path": "18"
    },
    "125": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "126": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "AND",
      "path": "18"
    },
    "127": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "128": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "130": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "ADD",
      "path": "18"
    },
    "131": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "132": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x130"
    },
    "135": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "jump": "i",
      "offset": [
        857,
        1015
      ],
      "op": "JUMP",
      "path": "18"
    },
    "136": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "137": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "STOP",
      "path": "18"
    },
    "138": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "139": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x88"
    },
    "142": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "144": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "DUP1",
      "path": "18"
    },
    "145": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "146": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "SUB",
      "path": "18"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "149": {
      "op": "DUP2"
    },
    "150": {
      "op": "LT"
    },
    "151": {
      "op": "ISZERO"
    },
    "152": {
      "op": "PUSH2",
      "value": "0xA0"
    },
    "155": {
      "op": "JUMPI"
    },
    "156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "158": {
      "op": "DUP1"
    },
    "159": {
      "op": "REVERT"
    },
    "160": {
      "op": "JUMPDEST"
    },
    "161": {
      "op": "POP"
    },
    "162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "168": {
      "op": "SHL"
    },
    "169": {
      "op": "SUB"
    },
    "170": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "DUP2",
      "path": "18"
    },
    "171": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "172": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "AND",
      "path": "18"
    },
    "173": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "174": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "176": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "ADD",
      "path": "18"
    },
    "177": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "178": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A8"
    },
    "181": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "jump": "i",
      "offset": [
        546,
        851
      ],
      "op": "JUMP",
      "path": "18"
    },
    "182": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "183": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDC"
    },
    "186": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "188": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "DUP1",
      "path": "18"
    },
    "189": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "190": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "SUB",
      "path": "18"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "193": {
      "op": "DUP2"
    },
    "194": {
      "op": "LT"
    },
    "195": {
      "op": "ISZERO"
    },
    "196": {
      "op": "PUSH2",
      "value": "0xCC"
    },
    "199": {
      "op": "JUMPI"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "202": {
      "op": "DUP1"
    },
    "203": {
      "op": "REVERT"
    },
    "204": {
      "op": "JUMPDEST"
    },
    "205": {
      "op": "POP"
    },
    "206": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "213": {
      "op": "SHL"
    },
    "214": {
      "op": "SUB"
    },
    "215": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "AND",
      "path": "18"
    },
    "216": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x28A"
    },
    "219": {
      "fn": "SimplePriceOracle.assetPrices",
      "jump": "i",
      "offset": [
        1082,
        1184
      ],
      "op": "JUMP",
      "path": "18"
    },
    "220": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "221": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "223": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "DUP1",
      "path": "18"
    },
    "224": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "225": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "226": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "DUP3",
      "path": "18"
    },
    "227": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "228": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "229": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "230": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "DUP2",
      "path": "18"
    },
    "231": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "232": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "SUB",
      "path": "18"
    },
    "233": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "235": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "ADD",
      "path": "18"
    },
    "236": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "237": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "RETURN",
      "path": "18"
    },
    "238": {
      "offset": [
        156,
        197
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "239": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF6"
    },
    "242": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A9"
    },
    "245": {
      "fn": "SimplePriceOracle.assetPrices",
      "jump": "i",
      "offset": [
        156,
        197
      ],
      "op": "JUMP",
      "path": "16"
    },
    "246": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "247": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "249": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "DUP1",
      "path": "16"
    },
    "250": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "251": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "252": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "253": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "254": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "DUP3",
      "path": "16"
    },
    "255": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "256": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "257": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "258": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "DUP2",
      "path": "16"
    },
    "259": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "260": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "SUB",
      "path": "16"
    },
    "261": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "263": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "ADD",
      "path": "16"
    },
    "264": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "265": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        156,
        197
      ],
      "op": "RETURN",
      "path": "16"
    },
    "266": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        282,
        540
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "267": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        282,
        540
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDC"
    },
    "270": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        282,
        540
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "272": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        282,
        540
      ],
      "op": "DUP1",
      "path": "18"
    },
    "273": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        282,
        540
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "274": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        282,
        540
      ],
      "op": "SUB",
      "path": "18"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "277": {
      "op": "DUP2"
    },
    "278": {
      "op": "LT"
    },
    "279": {
      "op": "ISZERO"
    },
    "280": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "283": {
      "op": "JUMPI"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "286": {
      "op": "DUP1"
    },
    "287": {
      "op": "REVERT"
    },
    "288": {
      "op": "JUMPDEST"
    },
    "289": {
      "op": "POP"
    },
    "290": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        282,
        540
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "297": {
      "op": "SHL"
    },
    "298": {
      "op": "SUB"
    },
    "299": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        282,
        540
      ],
      "op": "AND",
      "path": "18"
    },
    "300": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        282,
        540
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AE"
    },
    "303": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "jump": "i",
      "offset": [
        282,
        540
      ],
      "op": "JUMP",
      "path": "18"
    },
    "304": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        857,
        1015
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "311": {
      "op": "SHL"
    },
    "312": {
      "op": "SUB"
    },
    "313": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 0
    },
    "314": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "AND",
      "path": "18"
    },
    "315": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        955
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "317": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "DUP2",
      "path": "18"
    },
    "318": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "DUP2",
      "path": "18"
    },
    "319": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "320": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "322": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "DUP2",
      "path": "18"
    },
    "323": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "DUP2",
      "path": "18"
    },
    "324": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "325": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "327": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "328": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "DUP3",
      "path": "18"
    },
    "329": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "330": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "331": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        949,
        962
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "332": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "DUP3",
      "path": "18"
    },
    "333": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "334": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "335": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "DUP5",
      "path": "18"
    },
    "336": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "337": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "338": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "DUP4",
      "path": "18"
    },
    "339": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "ADD",
      "path": "18"
    },
    "340": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "341": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "DUP2",
      "path": "18"
    },
    "342": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "DUP2",
      "path": "18"
    },
    "343": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "ADD",
      "path": "18"
    },
    "344": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "DUP4",
      "path": "18"
    },
    "345": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "346": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "347": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "349": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "DUP3",
      "path": "18"
    },
    "350": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "ADD",
      "path": "18"
    },
    "351": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "DUP4",
      "path": "18"
    },
    "352": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "353": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "354": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "355": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xDD71A1D19FCBA687442A1D5C58578F1E409AF71A79D10FD95A4D66EFD8FA9AE7"
    },
    "388": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "389": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "DUP2",
      "path": "18"
    },
    "390": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "391": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "SUB",
      "path": "18"
    },
    "392": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "394": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "ADD",
      "path": "18"
    },
    "395": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "396": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        930,
        977
      ],
      "op": "LOG1",
      "path": "18"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "403": {
      "op": "SHL"
    },
    "404": {
      "op": "SUB"
    },
    "405": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "SWAP1",
      "path": "18",
      "statement": 1
    },
    "406": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "407": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "AND",
      "path": "18"
    },
    "408": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        993
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "410": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "411": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "DUP2",
      "path": "18"
    },
    "412": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "413": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "415": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "DUP2",
      "path": "18"
    },
    "416": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "417": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "418": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "420": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "421": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1000
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "422": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "offset": [
        987,
        1008
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "423": {
      "fn": "SimplePriceOracle.setDirectPrice",
      "jump": "o",
      "offset": [
        857,
        1015
      ],
      "op": "JUMP",
      "path": "18"
    },
    "424": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        546,
        851
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "425": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        636,
        649
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "427": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        675,
        681
      ],
      "op": "DUP3",
      "path": "18"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "434": {
      "op": "SHL"
    },
    "435": {
      "op": "SUB"
    },
    "436": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        694
      ],
      "op": "AND",
      "path": "18"
    },
    "437": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        694
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6F307DC3"
    },
    "442": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "444": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "445": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "DUP2",
      "path": "18"
    },
    "446": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "451": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "AND",
      "path": "18"
    },
    "452": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "454": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "SHL",
      "path": "18"
    },
    "455": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "DUP2",
      "path": "18"
    },
    "456": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "457": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "459": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "ADD",
      "path": "18"
    },
    "460": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "462": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "464": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "465": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "DUP1",
      "path": "18"
    },
    "466": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "DUP4",
      "path": "18"
    },
    "467": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "SUB",
      "path": "18"
    },
    "468": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "DUP2",
      "path": "18"
    },
    "469": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "DUP7",
      "path": "18"
    },
    "470": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "DUP1",
      "path": "18"
    },
    "471": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "472": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "473": {
      "op": "DUP1"
    },
    "474": {
      "op": "ISZERO"
    },
    "475": {
      "op": "PUSH2",
      "value": "0x1E3"
    },
    "478": {
      "op": "JUMPI"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "481": {
      "op": "DUP1"
    },
    "482": {
      "op": "REVERT"
    },
    "483": {
      "op": "JUMPDEST"
    },
    "484": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "POP",
      "path": "18"
    },
    "485": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "GAS",
      "path": "18"
    },
    "486": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "487": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "488": {
      "op": "DUP1"
    },
    "489": {
      "op": "ISZERO"
    },
    "490": {
      "op": "PUSH2",
      "value": "0x1F7"
    },
    "493": {
      "op": "JUMPI"
    },
    "494": {
      "op": "RETURNDATASIZE"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "497": {
      "op": "DUP1"
    },
    "498": {
      "op": "RETURNDATACOPY"
    },
    "499": {
      "op": "RETURNDATASIZE"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "502": {
      "op": "REVERT"
    },
    "503": {
      "op": "JUMPDEST"
    },
    "504": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "POP",
      "path": "18"
    },
    "505": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "POP",
      "path": "18"
    },
    "506": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "POP",
      "path": "18"
    },
    "507": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "POP",
      "path": "18"
    },
    "508": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "510": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "511": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "514": {
      "op": "DUP2"
    },
    "515": {
      "op": "LT"
    },
    "516": {
      "op": "ISZERO"
    },
    "517": {
      "op": "PUSH2",
      "value": "0x20D"
    },
    "520": {
      "op": "JUMPI"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "523": {
      "op": "DUP1"
    },
    "524": {
      "op": "REVERT"
    },
    "525": {
      "op": "JUMPDEST"
    },
    "526": {
      "op": "POP"
    },
    "527": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "534": {
      "op": "SHL"
    },
    "535": {
      "op": "SUB"
    },
    "536": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 2
    },
    "537": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "AND",
      "path": "18"
    },
    "538": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        737
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "540": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "DUP2",
      "path": "18"
    },
    "541": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "DUP2",
      "path": "18"
    },
    "542": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "543": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "545": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "DUP2",
      "path": "18"
    },
    "546": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "DUP2",
      "path": "18"
    },
    "547": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "548": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "550": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "551": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "DUP3",
      "path": "18"
    },
    "552": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "553": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "554": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        731,
        744
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "555": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "DUP3",
      "path": "18"
    },
    "556": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "557": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "558": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "DUP5",
      "path": "18"
    },
    "559": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "560": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "561": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "DUP4",
      "path": "18"
    },
    "562": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "ADD",
      "path": "18"
    },
    "563": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "564": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "DUP2",
      "path": "18"
    },
    "565": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "DUP2",
      "path": "18"
    },
    "566": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "ADD",
      "path": "18"
    },
    "567": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "DUP6",
      "path": "18"
    },
    "568": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "569": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "570": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "572": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "DUP3",
      "path": "18"
    },
    "573": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "ADD",
      "path": "18"
    },
    "574": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "DUP6",
      "path": "18"
    },
    "575": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "576": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "577": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "578": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "579": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        660,
        696
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xDD71A1D19FCBA687442A1D5C58578F1E409AF71A79D10FD95A4D66EFD8FA9AE7"
    },
    "614": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "615": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "616": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "DUP2",
      "path": "18"
    },
    "617": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "618": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "SUB",
      "path": "18"
    },
    "619": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "621": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "ADD",
      "path": "18"
    },
    "622": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "623": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        712,
        795
      ],
      "op": "LOG1",
      "path": "18"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "630": {
      "op": "SHL"
    },
    "631": {
      "op": "SUB"
    },
    "632": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        818
      ],
      "op": "AND",
      "path": "18",
      "statement": 3
    },
    "633": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "635": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        818
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "636": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        818
      ],
      "op": "DUP2",
      "path": "18"
    },
    "637": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        818
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "638": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        818
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "640": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        818
      ],
      "op": "DUP2",
      "path": "18"
    },
    "641": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        818
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "642": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        818
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "643": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        818
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "645": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        818
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "646": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        818
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "647": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "offset": [
        805,
        844
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "648": {
      "op": "POP"
    },
    "649": {
      "fn": "SimplePriceOracle.setUnderlyingPrice",
      "jump": "o",
      "offset": [
        546,
        851
      ],
      "op": "JUMP",
      "path": "18"
    },
    "650": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "657": {
      "op": "SHL"
    },
    "658": {
      "op": "SUB"
    },
    "659": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 4
    },
    "660": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "AND",
      "path": "18"
    },
    "661": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1141,
        1145
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "663": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "664": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "DUP2",
      "path": "18"
    },
    "665": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "666": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "668": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "DUP2",
      "path": "18"
    },
    "669": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "670": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "671": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "673": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "674": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "675": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1164,
        1177
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "676": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "677": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "678": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "679": {
      "fn": "SimplePriceOracle.assetPrices",
      "offset": [
        1082,
        1184
      ],
      "op": "POP",
      "path": "18"
    },
    "680": {
      "fn": "SimplePriceOracle.assetPrices",
      "jump": "o",
      "offset": [
        1082,
        1184
      ],
      "op": "JUMP",
      "path": "18"
    },
    "681": {
      "offset": [
        156,
        197
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "682": {
      "offset": [
        193,
        197
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "684": {
      "offset": [
        156,
        197
      ],
      "op": "DUP2",
      "path": "16"
    },
    "685": {
      "fn": "SimplePriceOracle.assetPrices",
      "jump": "o",
      "offset": [
        156,
        197
      ],
      "op": "JUMP",
      "path": "16"
    },
    "686": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        282,
        540
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "687": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        346,
        350
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "689": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F5"
    },
    "692": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        387
      ],
      "op": "DUP3",
      "path": "18"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "699": {
      "op": "SHL"
    },
    "700": {
      "op": "SUB"
    },
    "701": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        394
      ],
      "op": "AND",
      "path": "18"
    },
    "702": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        394
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "707": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "709": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "710": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP2",
      "path": "18"
    },
    "711": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "716": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "AND",
      "path": "18"
    },
    "717": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "719": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SHL",
      "path": "18"
    },
    "720": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP2",
      "path": "18"
    },
    "721": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "722": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "724": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "ADD",
      "path": "18"
    },
    "725": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "727": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "729": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "730": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP1",
      "path": "18"
    },
    "731": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP4",
      "path": "18"
    },
    "732": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SUB",
      "path": "18"
    },
    "733": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP2",
      "path": "18"
    },
    "734": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP7",
      "path": "18"
    },
    "735": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP1",
      "path": "18"
    },
    "736": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "737": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "738": {
      "op": "DUP1"
    },
    "739": {
      "op": "ISZERO"
    },
    "740": {
      "op": "PUSH2",
      "value": "0x2EC"
    },
    "743": {
      "op": "JUMPI"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "746": {
      "op": "DUP1"
    },
    "747": {
      "op": "REVERT"
    },
    "748": {
      "op": "JUMPDEST"
    },
    "749": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "POP",
      "path": "18"
    },
    "750": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "GAS",
      "path": "18"
    },
    "751": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "752": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "753": {
      "op": "DUP1"
    },
    "754": {
      "op": "ISZERO"
    },
    "755": {
      "op": "PUSH2",
      "value": "0x300"
    },
    "758": {
      "op": "JUMPI"
    },
    "759": {
      "op": "RETURNDATASIZE"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "762": {
      "op": "DUP1"
    },
    "763": {
      "op": "RETURNDATACOPY"
    },
    "764": {
      "op": "RETURNDATASIZE"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "767": {
      "op": "REVERT"
    },
    "768": {
      "op": "JUMPDEST"
    },
    "769": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "POP",
      "path": "18"
    },
    "770": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "POP",
      "path": "18"
    },
    "771": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "POP",
      "path": "18"
    },
    "772": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "POP",
      "path": "18"
    },
    "773": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "775": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "776": {
      "op": "RETURNDATASIZE"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "779": {
      "op": "DUP3"
    },
    "780": {
      "op": "RETURNDATACOPY"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "783": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "784": {
      "op": "SWAP1"
    },
    "785": {
      "op": "DUP2"
    },
    "786": {
      "op": "ADD"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "789": {
      "op": "NOT"
    },
    "790": {
      "op": "AND"
    },
    "791": {
      "op": "DUP3"
    },
    "792": {
      "op": "ADD"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "795": {
      "op": "MSTORE"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "798": {
      "op": "DUP2"
    },
    "799": {
      "op": "LT"
    },
    "800": {
      "op": "ISZERO"
    },
    "801": {
      "op": "PUSH2",
      "value": "0x329"
    },
    "804": {
      "op": "JUMPI"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "807": {
      "op": "DUP1"
    },
    "808": {
      "op": "REVERT"
    },
    "809": {
      "op": "JUMPDEST"
    },
    "810": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP2",
      "path": "18"
    },
    "811": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "ADD",
      "path": "18"
    },
    "812": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "813": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP1",
      "path": "18"
    },
    "814": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP1",
      "path": "18"
    },
    "815": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "816": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "818": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "819": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "820": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "821": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "822": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "823": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP5",
      "path": "18"
    },
    "824": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "830": {
      "op": "DUP3"
    },
    "831": {
      "op": "GT"
    },
    "832": {
      "op": "ISZERO"
    },
    "833": {
      "op": "PUSH2",
      "value": "0x349"
    },
    "836": {
      "op": "JUMPI"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "839": {
      "op": "DUP1"
    },
    "840": {
      "op": "REVERT"
    },
    "841": {
      "op": "JUMPDEST"
    },
    "842": {
      "op": "SWAP1"
    },
    "843": {
      "op": "DUP4"
    },
    "844": {
      "op": "ADD"
    },
    "845": {
      "op": "SWAP1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "848": {
      "op": "DUP3"
    },
    "849": {
      "op": "ADD"
    },
    "850": {
      "op": "DUP6"
    },
    "851": {
      "op": "DUP2"
    },
    "852": {
      "op": "GT"
    },
    "853": {
      "op": "ISZERO"
    },
    "854": {
      "op": "PUSH2",
      "value": "0x35E"
    },
    "857": {
      "op": "JUMPI"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "860": {
      "op": "DUP1"
    },
    "861": {
      "op": "REVERT"
    },
    "862": {
      "op": "JUMPDEST"
    },
    "863": {
      "op": "DUP3"
    },
    "864": {
      "op": "MLOAD"
    },
    "865": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "871": {
      "op": "DUP2"
    },
    "872": {
      "op": "GT"
    },
    "873": {
      "op": "DUP3"
    },
    "874": {
      "op": "DUP3"
    },
    "875": {
      "op": "ADD"
    },
    "876": {
      "op": "DUP9"
    },
    "877": {
      "op": "LT"
    },
    "878": {
      "op": "OR"
    },
    "879": {
      "op": "ISZERO"
    },
    "880": {
      "op": "PUSH2",
      "value": "0x378"
    },
    "883": {
      "op": "JUMPI"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "886": {
      "op": "DUP1"
    },
    "887": {
      "op": "REVERT"
    },
    "888": {
      "op": "JUMPDEST"
    },
    "889": {
      "op": "DUP3"
    },
    "890": {
      "op": "MSTORE"
    },
    "891": {
      "op": "POP"
    },
    "892": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP2",
      "path": "18"
    },
    "893": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "896": {
      "op": "SWAP2"
    },
    "897": {
      "op": "DUP3"
    },
    "898": {
      "op": "ADD"
    },
    "899": {
      "op": "SWAP3"
    },
    "900": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "901": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "902": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "ADD",
      "path": "18"
    },
    "903": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "904": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP1",
      "path": "18"
    },
    "905": {
      "op": "DUP4"
    },
    "906": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP4",
      "path": "18"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "909": {
      "op": "JUMPDEST"
    },
    "910": {
      "op": "DUP4"
    },
    "911": {
      "op": "DUP2"
    },
    "912": {
      "op": "LT"
    },
    "913": {
      "op": "ISZERO"
    },
    "914": {
      "op": "PUSH2",
      "value": "0x3A5"
    },
    "917": {
      "op": "JUMPI"
    },
    "918": {
      "op": "DUP2"
    },
    "919": {
      "op": "DUP2"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "op": "MLOAD"
    },
    "922": {
      "op": "DUP4"
    },
    "923": {
      "op": "DUP3"
    },
    "924": {
      "op": "ADD"
    },
    "925": {
      "op": "MSTORE"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "928": {
      "op": "ADD"
    },
    "929": {
      "op": "PUSH2",
      "value": "0x38D"
    },
    "932": {
      "op": "JUMP"
    },
    "933": {
      "op": "JUMPDEST"
    },
    "934": {
      "op": "POP"
    },
    "935": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "POP",
      "path": "18"
    },
    "936": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "POP",
      "path": "18"
    },
    "937": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "POP",
      "path": "18"
    },
    "938": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "939": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "POP",
      "path": "18"
    },
    "940": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "941": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP2",
      "path": "18"
    },
    "942": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "ADD",
      "path": "18"
    },
    "943": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "944": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "946": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "AND",
      "path": "18"
    },
    "947": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP1",
      "path": "18"
    },
    "948": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "949": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D2"
    },
    "952": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "953": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP1",
      "path": "18"
    },
    "954": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP3",
      "path": "18"
    },
    "955": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SUB",
      "path": "18"
    },
    "956": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP1",
      "path": "18"
    },
    "957": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "958": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "960": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP4",
      "path": "18"
    },
    "961": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "963": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SUB",
      "path": "18"
    },
    "964": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "967": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "EXP",
      "path": "18"
    },
    "968": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SUB",
      "path": "18"
    },
    "969": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "NOT",
      "path": "18"
    },
    "970": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "AND",
      "path": "18"
    },
    "971": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "DUP2",
      "path": "18"
    },
    "972": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "973": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "975": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "ADD",
      "path": "18"
    },
    "976": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "977": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "POP",
      "path": "18"
    },
    "978": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "979": {
      "op": "POP"
    },
    "980": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "982": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "DUP2",
      "path": "18"
    },
    "983": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "DUP2",
      "path": "18"
    },
    "984": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "ADD",
      "path": "18"
    },
    "985": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "986": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "987": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "989": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "DUP2",
      "path": "18"
    },
    "990": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "991": {
      "op": "PUSH4",
      "value": "0xC68AA89"
    },
    "996": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "998": {
      "op": "SHL"
    },
    "999": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1001": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1002": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "ADD",
      "path": "18"
    },
    "1003": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1004": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        381,
        396
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        380
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x492"
    },
    "1009": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        380
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1010": {
      "op": "POP"
    },
    "1011": {
      "op": "POP"
    },
    "1012": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "jump": "i",
      "offset": [
        366,
        405
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1013": {
      "branch": 8,
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        366,
        405
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1014": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        362,
        534
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1015": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        362,
        534
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x409"
    },
    "1018": {
      "branch": 8,
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        362,
        534
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1019": {
      "op": "POP"
    },
    "1020": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        428,
        432
      ],
      "op": "PUSH8",
      "path": "18",
      "statement": 5,
      "value": "0xDE0B6B3A7640000"
    },
    "1029": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        421,
        432
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A4"
    },
    "1032": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        421,
        432
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1033": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        362,
        534
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1034": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        476
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 6,
      "value": "0x0"
    },
    "1036": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1037": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        500,
        506
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1044": {
      "op": "SHL"
    },
    "1045": {
      "op": "SUB"
    },
    "1046": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        519
      ],
      "op": "AND",
      "path": "18"
    },
    "1047": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        519
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6F307DC3"
    },
    "1052": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1054": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1055": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1056": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "1061": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "AND",
      "path": "18"
    },
    "1062": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "1064": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "SHL",
      "path": "18"
    },
    "1065": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1066": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1067": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1069": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "ADD",
      "path": "18"
    },
    "1070": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1072": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1074": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1075": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1076": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1077": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "SUB",
      "path": "18"
    },
    "1078": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1079": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "DUP7",
      "path": "18"
    },
    "1080": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1081": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "1082": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1083": {
      "op": "DUP1"
    },
    "1084": {
      "op": "ISZERO"
    },
    "1085": {
      "op": "PUSH2",
      "value": "0x445"
    },
    "1088": {
      "op": "JUMPI"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1091": {
      "op": "DUP1"
    },
    "1092": {
      "op": "REVERT"
    },
    "1093": {
      "op": "JUMPDEST"
    },
    "1094": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "POP",
      "path": "18"
    },
    "1095": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "GAS",
      "path": "18"
    },
    "1096": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "1097": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1098": {
      "op": "DUP1"
    },
    "1099": {
      "op": "ISZERO"
    },
    "1100": {
      "op": "PUSH2",
      "value": "0x459"
    },
    "1103": {
      "op": "JUMPI"
    },
    "1104": {
      "op": "RETURNDATASIZE"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1107": {
      "op": "DUP1"
    },
    "1108": {
      "op": "RETURNDATACOPY"
    },
    "1109": {
      "op": "RETURNDATASIZE"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1112": {
      "op": "REVERT"
    },
    "1113": {
      "op": "JUMPDEST"
    },
    "1114": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "POP",
      "path": "18"
    },
    "1115": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "POP",
      "path": "18"
    },
    "1116": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "POP",
      "path": "18"
    },
    "1117": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "POP",
      "path": "18"
    },
    "1118": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1120": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1121": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1124": {
      "op": "DUP2"
    },
    "1125": {
      "op": "LT"
    },
    "1126": {
      "op": "ISZERO"
    },
    "1127": {
      "op": "PUSH2",
      "value": "0x46F"
    },
    "1130": {
      "op": "JUMPI"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1133": {
      "op": "DUP1"
    },
    "1134": {
      "op": "REVERT"
    },
    "1135": {
      "op": "JUMPDEST"
    },
    "1136": {
      "op": "POP"
    },
    "1137": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "AND",
      "path": "18"
    },
    "1147": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1148": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1149": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        485,
        521
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1151": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1152": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "ADD",
      "path": "18"
    },
    "1153": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1154": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1155": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1156": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1157": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1159": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "ADD",
      "path": "18"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1162": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1163": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1164": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        470,
        523
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1165": {
      "op": "POP"
    },
    "1166": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        463,
        523
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A4"
    },
    "1169": {
      "fn": "SimplePriceOracle.getUnderlyingPrice",
      "offset": [
        463,
        523
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1170": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1190,
        1371
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1171": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1271,
        1275
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1173": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1359,
        1360
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 7
    },
    "1174": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1176": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1177": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1179": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "ADD",
      "path": "18"
    },
    "1180": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1181": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1182": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1183": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1184": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1185": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1187": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "ADD",
      "path": "18"
    },
    "1188": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1189": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1190": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1191": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1192": {
      "op": "JUMPDEST"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1195": {
      "op": "DUP4"
    },
    "1196": {
      "op": "LT"
    },
    "1197": {
      "op": "PUSH2",
      "value": "0x4C7"
    },
    "1200": {
      "op": "JUMPI"
    },
    "1201": {
      "op": "DUP1"
    },
    "1202": {
      "op": "MLOAD"
    },
    "1203": {
      "op": "DUP3"
    },
    "1204": {
      "op": "MSTORE"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1207": {
      "op": "NOT"
    },
    "1208": {
      "op": "SWAP1"
    },
    "1209": {
      "op": "SWAP3"
    },
    "1210": {
      "op": "ADD"
    },
    "1211": {
      "op": "SWAP2"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1214": {
      "op": "SWAP2"
    },
    "1215": {
      "op": "DUP3"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "SWAP2"
    },
    "1218": {
      "op": "ADD"
    },
    "1219": {
      "op": "PUSH2",
      "value": "0x4A8"
    },
    "1222": {
      "op": "JUMP"
    },
    "1223": {
      "op": "JUMPDEST"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1226": {
      "op": "DUP4"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1229": {
      "op": "SUB"
    },
    "1230": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1233": {
      "op": "EXP"
    },
    "1234": {
      "op": "SUB"
    },
    "1235": {
      "op": "DUP1"
    },
    "1236": {
      "op": "NOT"
    },
    "1237": {
      "op": "DUP3"
    },
    "1238": {
      "op": "MLOAD"
    },
    "1239": {
      "op": "AND"
    },
    "1240": {
      "op": "DUP2"
    },
    "1241": {
      "op": "DUP5"
    },
    "1242": {
      "op": "MLOAD"
    },
    "1243": {
      "op": "AND"
    },
    "1244": {
      "op": "DUP1"
    },
    "1245": {
      "op": "DUP3"
    },
    "1246": {
      "op": "OR"
    },
    "1247": {
      "op": "DUP6"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "op": "POP"
    },
    "1252": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "POP",
      "path": "18"
    },
    "1253": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "POP",
      "path": "18"
    },
    "1254": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "POP",
      "path": "18"
    },
    "1255": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1256": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "POP",
      "path": "18"
    },
    "1257": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "ADD",
      "path": "18"
    },
    "1258": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1259": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "POP",
      "path": "18"
    },
    "1260": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "POP",
      "path": "18"
    },
    "1261": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1263": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1266": {
      "op": "DUP2"
    },
    "1267": {
      "op": "DUP4"
    },
    "1268": {
      "op": "SUB"
    },
    "1269": {
      "op": "SUB"
    },
    "1270": {
      "op": "DUP2"
    },
    "1271": {
      "op": "MSTORE"
    },
    "1272": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1273": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1275": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1341,
        1362
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1276": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1331,
        1363
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1277": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1331,
        1363
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1278": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1331,
        1363
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1279": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1331,
        1363
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1281": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1331,
        1363
      ],
      "op": "ADD",
      "path": "18"
    },
    "1282": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1331,
        1363
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1283": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1323,
        1324
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1284": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1286": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1287": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1289": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "ADD",
      "path": "18"
    },
    "1290": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1291": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1292": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1293": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1294": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1295": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1297": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "ADD",
      "path": "18"
    },
    "1298": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1299": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1300": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1301": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1302": {
      "op": "JUMPDEST"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1305": {
      "op": "DUP4"
    },
    "1306": {
      "op": "LT"
    },
    "1307": {
      "op": "PUSH2",
      "value": "0x535"
    },
    "1310": {
      "op": "JUMPI"
    },
    "1311": {
      "op": "DUP1"
    },
    "1312": {
      "op": "MLOAD"
    },
    "1313": {
      "op": "DUP3"
    },
    "1314": {
      "op": "MSTORE"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1317": {
      "op": "NOT"
    },
    "1318": {
      "op": "SWAP1"
    },
    "1319": {
      "op": "SWAP3"
    },
    "1320": {
      "op": "ADD"
    },
    "1321": {
      "op": "SWAP2"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1324": {
      "op": "SWAP2"
    },
    "1325": {
      "op": "DUP3"
    },
    "1326": {
      "op": "ADD"
    },
    "1327": {
      "op": "SWAP2"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "op": "PUSH2",
      "value": "0x516"
    },
    "1332": {
      "op": "JUMP"
    },
    "1333": {
      "op": "JUMPDEST"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1336": {
      "op": "DUP4"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1339": {
      "op": "SUB"
    },
    "1340": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1343": {
      "op": "EXP"
    },
    "1344": {
      "op": "SUB"
    },
    "1345": {
      "op": "DUP1"
    },
    "1346": {
      "op": "NOT"
    },
    "1347": {
      "op": "DUP3"
    },
    "1348": {
      "op": "MLOAD"
    },
    "1349": {
      "op": "AND"
    },
    "1350": {
      "op": "DUP2"
    },
    "1351": {
      "op": "DUP5"
    },
    "1352": {
      "op": "MLOAD"
    },
    "1353": {
      "op": "AND"
    },
    "1354": {
      "op": "DUP1"
    },
    "1355": {
      "op": "DUP3"
    },
    "1356": {
      "op": "OR"
    },
    "1357": {
      "op": "DUP6"
    },
    "1358": {
      "op": "MSTORE"
    },
    "1359": {
      "op": "POP"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "POP",
      "path": "18"
    },
    "1363": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "POP",
      "path": "18"
    },
    "1364": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "POP",
      "path": "18"
    },
    "1365": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1366": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "POP",
      "path": "18"
    },
    "1367": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "ADD",
      "path": "18"
    },
    "1368": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1369": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "POP",
      "path": "18"
    },
    "1370": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "POP",
      "path": "18"
    },
    "1371": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1373": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1376": {
      "op": "DUP2"
    },
    "1377": {
      "op": "DUP4"
    },
    "1378": {
      "op": "SUB"
    },
    "1379": {
      "op": "SUB"
    },
    "1380": {
      "op": "DUP2"
    },
    "1381": {
      "op": "MSTORE"
    },
    "1382": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1383": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1385": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1305,
        1326
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1386": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1295,
        1327
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1387": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1295,
        1327
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1388": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1295,
        1327
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1389": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1295,
        1327
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1391": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1295,
        1327
      ],
      "op": "ADD",
      "path": "18"
    },
    "1392": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1295,
        1327
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1393": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1295,
        1363
      ],
      "op": "EQ",
      "path": "18"
    },
    "1394": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1287,
        1364
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1395": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1287,
        1364
      ],
      "op": "POP",
      "path": "18"
    },
    "1396": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1190,
        1371
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1397": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1190,
        1371
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1398": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1190,
        1371
      ],
      "op": "POP",
      "path": "18"
    },
    "1399": {
      "fn": "SimplePriceOracle.compareStrings",
      "offset": [
        1190,
        1371
      ],
      "op": "POP",
      "path": "18"
    },
    "1400": {
      "fn": "SimplePriceOracle.compareStrings",
      "jump": "o",
      "offset": [
        1190,
        1371
      ],
      "op": "JUMP",
      "path": "18"
    }
  },
  "sha1": "3e0a6058b405997034e1efacda8bc7c11b7212e8",
  "source": "pragma solidity ^0.5.16;\n\nimport \"compound-finance/compound-protocol@2.8.1/contracts/Comptroller.sol\";\nimport \"compound-finance/compound-protocol@2.8.1/contracts/CErc20Immutable.sol\";\nimport \"compound-finance/compound-protocol@2.8.1/contracts/CEther.sol\";\nimport \"compound-finance/compound-protocol@2.8.1/contracts/WhitePaperInterestRateModel.sol\";\nimport \"compound-finance/compound-protocol@2.8.1/contracts/JumpRateModel.sol\";\nimport \"compound-finance/compound-protocol@2.8.1/contracts/SimplePriceOracle.sol\";\n\ncontract nComptroller is Comptroller {\n    constructor() public Comptroller() {}\n}\n\ncontract nPriceOracle is SimplePriceOracle { }\n\ncontract nCErc20 is CErc20Immutable { \n    constructor(address underlying_,\n            ComptrollerInterface comptroller_,\n            InterestRateModel interestRateModel_,\n            uint initialExchangeRateMantissa_,\n            string memory name_,\n            string memory symbol_,\n            uint8 decimals_,\n            address payable admin_) public\n        CErc20Immutable(underlying_, comptroller_, interestRateModel_, initialExchangeRateMantissa_, name_, symbol_, decimals_, admin_) { }\n}\n\ncontract nCEther is CEther { \n    constructor(ComptrollerInterface comptroller_,\n                InterestRateModel interestRateModel_,\n                uint initialExchangeRateMantissa_,\n                string memory name_,\n                string memory symbol_,\n                uint8 decimals_,\n                address payable admin_) public\n        CEther(comptroller_, interestRateModel_, initialExchangeRateMantissa_, name_, symbol_, decimals_, admin_) { }\n}\n\ncontract nJumpRateModel is JumpRateModel {\n    constructor(uint baseRatePerYear, uint multiplierPerYear, uint jumpMultiplierPerYear, uint kink_) public \n        JumpRateModel(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_) { }\n}\n\ncontract nWhitePaperInterestRateModel is WhitePaperInterestRateModel {\n    constructor(uint baseRatePerYear, uint multiplierPerYear) public\n        WhitePaperInterestRateModel(baseRatePerYear, multiplierPerYear) {}\n}",
  "sourceMap": "596:46:21:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;596:46:21;;;;;;;",
  "sourcePath": "contracts/mocks/CompoundImports.sol",
  "type": "contract"
}